{"version":3,"file":"static/js/122.bd2276b5.chunk.js","mappings":"gRAqCA,EAhCgB,WACZ,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,YACN,mCAAC,8GAEiCC,EAAAA,EAAAA,IAAeN,GAFhD,OAEaO,EAFb,OAGOH,EAAWG,GAHlB,gDAKOC,QAAQC,IAAR,MALP,yDAAD,sDAQH,GAAE,CAACT,KAGA,SAACU,EAAA,EAAD,WACMP,EAAQQ,MAAQ,GAAK,uCAClB,wBACIR,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAyBC,EAAhC,EAAeC,eAAiBD,OAASE,EAAzC,EAAyCA,QAASC,EAAlD,EAAkDA,WAAlD,OACT,2BACI,oCAAYJ,MACZ,oCAAYC,GAAkB,gBAC9B,qCAAaE,MACb,wCAAgB,IAAIE,KAAKD,GAAYE,mBAAmB,cAJnDP,EADA,OAWhC,C,4JCjCKQ,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAmB,mCAAG,6GAEJD,IAAAA,IAAA,qCAAwCD,IAFpC,cAErBG,EAFqB,yBAGpBA,EAASC,KAAKC,SAHM,gCAK3BlB,QAAQC,IAAR,MAL2B,yDAAH,qDA0BnBkB,EAAc,mCAAG,WAAM3B,GAAN,gGAECsB,IAAAA,IAAA,gBAAmBtB,EAAnB,oBAAsCqB,EAAtC,oBAFD,cAEhBG,EAFgB,yBAGfA,EAASC,MAHM,gCAKtBjB,QAAQC,IAAR,MALsB,yDAAH,sDASdH,EAAc,mCAAG,WAAMN,GAAN,gGAECsB,IAAAA,IAAA,gBAAmBtB,EAAnB,4BAA8CqB,EAA9C,oBAFD,cAEhBG,EAFgB,yBAGfA,EAASC,MAHM,gCAKtBjB,QAAQC,IAAR,MALsB,yDAAH,qD","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'services/api';\nimport { Box } from 'components/Box';\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        (async function getCast() {\n            try {\n                const reviewsInfo = await fetchMovieCast(movieId);\n                setReviews(reviewsInfo);\n            } catch (error) {\n                console.log(error);\n            }\n        })();\n    }, [movieId]);\n\n    return (\n        <Box>\n            {!reviews.lenth > 0 ? (<p>No reviews</p>) :\n                (<ul>\n                    {reviews.map(({ id, author, author_details: {rating}, content, created_at }) => (\n                        <li key={id}>\n                            <p>Author: {author}</p>\n                            <p>Rating: {rating ? rating : 'No rating'}</p>\n                            <p>Content: {content}</p>\n                            <p>Created at: {new Date(created_at).toLocaleDateString('en-US')}</p>\n                        </li>\n                    ))}\n                </ul>)}\n        </Box>\n    );\n};\n\nexport default Reviews;","import axios from \"axios\";\n\nconst API_KEY = '08f616fe2f268b4dbcc5ac680fac4838';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n    try {\n        const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n        return response.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchSearchMovies = async query => {\n    try {\n        const response = await axios.get('search/movie', {\n            params: {\n                api_key: API_KEY,\n                query: query,\n                language: 'en - US',\n                page: 1,\n                include_adult: false,\n            },\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchMovieById = async movieId => {\n    try {\n        const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n        return response.data;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchMovieCast = async movieId => {\n    try {\n        const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n        return response.data;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchMovieReviews = async movieId => {\n    try {\n        const response = await axios.get(`movie/${movieId}/review?api_key=${API_KEY}&language=en-US&page=1`);\n        return response.data;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovieCast","reviewsInfo","console","log","Box","lenth","map","id","author","rating","author_details","content","created_at","Date","toLocaleDateString","API_KEY","axios","fetchTrendingMovies","response","data","results","fetchMovieById"],"sourceRoot":""}