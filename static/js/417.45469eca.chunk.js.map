{"version":3,"file":"static/js/417.45469eca.chunk.js","mappings":"0SAEaA,EAAWC,EAAAA,GAAAA,GAAH,6SAIL,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IASJC,EAAWJ,EAAAA,GAAAA,GAAH,uMACA,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,MAAMC,MAAlB,IAGE,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,OAAOC,KAAnB,IAKZC,EAAQT,EAAAA,GAAAA,IAAH,qFAMLU,EAAWV,EAAAA,GAAAA,EAAH,sEACN,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,I,SCUhB,EAlCa,WACT,OAAwBQ,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,YACN,mCAAC,8GAE8BC,EAAAA,EAAAA,IAAeH,GAF7C,OAEaI,EAFb,OAGOL,EAAQK,GAHf,gDAKOC,QAAQC,IAAR,MALP,yDAAD,sDAQH,GAAE,CAACN,KAGA,SAACO,EAAA,EAAD,WACI,SAACtB,EAAD,UACKa,EAAKU,MAAM,EAAG,IAAIC,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC3C,OACI,UAACvB,EAAD,YACI,SAACK,EAAD,CACImB,IAAKD,EAAeE,EAAAA,GAAWF,EAAeG,EAAAA,GAC9CC,IAAKN,KACT,SAACf,EAAD,UAAWe,KACX,UAACf,EAAD,yBAAsBgB,OALXF,EAQtB,OAIhB,C,wGCvCM,IAAMK,EAAW,mCACXG,EAAc,4HACdF,EAAc,qC,4MCArBG,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAmB,mCAAG,6GAEJD,IAAAA,IAAA,qCAAwCD,IAFpC,cAErBG,EAFqB,yBAGpBA,EAASC,KAAKC,SAHM,gCAK3BnB,QAAQC,IAAR,MAL2B,yDAAH,qDASnBmB,EAAiB,mCAAG,WAAMC,GAAN,gGAEFN,IAAAA,IAAU,eAAgB,CAC7CO,OAAQ,CACJC,QAAST,EACTO,MAAOA,EACPG,SAAU,UACVC,KAAM,EACNC,eAAe,KARE,cAEnBT,EAFmB,yBAWlBA,EAASC,KAAKC,SAXI,gCAazBnB,QAAQC,IAAR,MAbyB,yDAAH,sDAiBjB0B,EAAc,mCAAG,WAAMhC,GAAN,gGAECoB,IAAAA,IAAA,gBAAmBpB,EAAnB,oBAAsCmB,EAAtC,oBAFD,cAEhBG,EAFgB,yBAGfA,EAASC,MAHM,gCAKtBlB,QAAQC,IAAR,MALsB,yDAAH,sDASdH,EAAc,mCAAG,WAAMH,GAAN,gGAECoB,IAAAA,IAAA,gBAAmBpB,EAAnB,4BAA8CmB,EAA9C,oBAFD,cAEhBG,EAFgB,yBAGfA,EAASC,KAAKzB,MAHC,gCAKtBO,QAAQC,IAAR,MALsB,yDAAH,sDASd2B,EAAiB,mCAAG,WAAMjC,GAAN,gGAEFoB,IAAAA,IAAA,gBAAmBpB,EAAnB,4BAA8CmB,EAA9C,2BAFE,cAEnBG,EAFmB,yBAGlBA,EAASC,KAAKC,SAHI,gCAKzBnB,QAAQC,IAAR,MALyB,yDAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","constant/constant.js","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CastList = styled.ul`\n    display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    grid-gap: ${p => p.theme.space[4]}px;\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 0;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n`;\n\nexport const CastItem = styled.li`\n    border-radius: ${p => p.theme.radii.normal};\n    border-color: transparent;\n    font-weight: 500;\n    background-color: ${p => p.theme.colors.white};\n    color: black;\n    box-shadow: 0px 5px 5px rgba(16,1,0,0.7); \n`;\n\nexport const Image = styled.img`\n    width: 100%;\n    height: auto;\n    object-fit: cover;\n`;\n\nexport const CastInfo = styled.p`\n    padding: ${p => p.theme.space[3]}px;\n    text-align: center;\n`;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'services/api';\nimport { IMG_PATH, PROFILE_IMG } from 'constant/constant';\nimport { Box } from 'components/Box';\nimport { CastList, CastItem, Image, CastInfo } from './Cast.styled';\n\nconst Cast = () => {\n    const [cast, setCast] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        (async function getCast() {\n            try {\n                const castInfo = await fetchMovieCast(movieId);\n                setCast(castInfo);\n            } catch (error) {\n                console.log(error);\n            }\n        })();\n    }, [movieId]);\n\n    return (\n        <Box>\n            <CastList>\n                {cast.slice(0, 20).map(({ id, name, character, profile_path }) => {\n                    return (\n                        <CastItem key={id}>\n                            <Image\n                                src={profile_path ? IMG_PATH + profile_path : PROFILE_IMG}\n                                alt={name} />\n                            <CastInfo>{name}</CastInfo>\n                            <CastInfo>Character: {character}</CastInfo>\n                        </CastItem>\n                    );\n                })}\n            </CastList>\n        </Box>\n    );\n};\n\nexport default Cast;","export const IMG_PATH = 'https://image.tmdb.org/t/p/w500/';\nexport const DEFAULT_IMG = 'https://yt3.ggpht.com/AAKF_677TIvjFz_9xFF0R6PgiVd0kRpEtY6APSxSDRP65nXg8hkn9NFsz2bRd9_Z37DJ9D_b=s900-c-k-c0x00ffffff-no-rj';\nexport const PROFILE_IMG = 'https://via.placeholder.com/300x400';","import axios from \"axios\";\n\nconst API_KEY = '08f616fe2f268b4dbcc5ac680fac4838';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n    try {\n        const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n        return response.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchSearchMovies = async query => {\n    try {\n        const response = await axios.get('search/movie', {\n            params: {\n                api_key: API_KEY,\n                query: query,\n                language: 'en - US',\n                page: 1,\n                include_adult: false,\n            },\n        });\n        return response.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchMovieById = async movieId => {\n    try {\n        const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n        return response.data;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchMovieCast = async movieId => {\n    try {\n        const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n        return response.data.cast;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchMovieReviews = async movieId => {\n    try {\n        const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n        return response.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\n"],"names":["CastList","styled","p","theme","space","CastItem","radii","normal","colors","white","Image","CastInfo","useState","cast","setCast","movieId","useParams","useEffect","fetchMovieCast","castInfo","console","log","Box","slice","map","id","name","character","profile_path","src","IMG_PATH","PROFILE_IMG","alt","DEFAULT_IMG","API_KEY","axios","fetchTrendingMovies","response","data","results","fetchSearchMovies","query","params","api_key","language","page","include_adult","fetchMovieById","fetchMovieReviews"],"sourceRoot":""}