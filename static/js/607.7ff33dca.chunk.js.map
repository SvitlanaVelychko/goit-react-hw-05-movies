{"version":3,"file":"static/js/607.7ff33dca.chunk.js","mappings":"6RAEaA,EAAaC,EAAAA,GAAAA,GAAH,iHAIZ,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGCC,EAAaJ,EAAAA,GAAAA,GAAH,wJACR,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACK,SAAAF,GAAC,OAAIA,EAAEC,MAAMG,MAAMC,MAAlB,I,SC4BtB,EAjCgB,WACZ,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,YACN,mCAAC,8GAEiCC,EAAAA,EAAAA,IAAkBH,GAFnD,OAEaI,EAFb,OAGOL,EAAWK,GAHlB,gDAKOC,QAAQC,IAAR,MALP,yDAAD,sDAQH,GAAE,CAACN,KAGA,SAACO,EAAA,EAAD,WACI,SAAClB,EAAD,UACKS,EAAQU,OAAS,EACdV,EAAQW,KAAI,YAAsE,IAAnEC,EAAkE,EAAlEA,GAAIC,EAA8D,EAA9DA,OAA0BC,EAAoC,EAAtDC,eAAkBD,OAAUE,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAC5D,OAAQ,UAACrB,EAAD,YACJ,0BAAG,mCAAH,IAAmBiB,MACnB,0BAAG,mCAAH,IAAmBC,GAAkB,gBACrC,0BAAG,oCAAH,IAAoBE,MACpB,0BAAG,uCAAH,IAAuB,IAAIE,KAAKD,GAAYE,mBAAmB,cAJ1CP,EAO5B,KAAM,iEAI1B,C,4MCnCKQ,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAmB,mCAAG,6GAEJD,IAAAA,IAAA,qCAAwCD,IAFpC,cAErBG,EAFqB,yBAGpBA,EAASC,KAAKC,SAHM,gCAK3BlB,QAAQC,IAAR,MAL2B,yDAAH,qDASnBkB,EAAiB,mCAAG,WAAMC,GAAN,gGAEFN,IAAAA,IAAU,eAAgB,CAC7CO,OAAQ,CACJC,QAAST,EACTO,MAAOA,EACPG,SAAU,UACVC,KAAM,EACNC,eAAe,KARE,cAEnBT,EAFmB,yBAWlBA,EAASC,KAAKC,SAXI,gCAazBlB,QAAQC,IAAR,MAbyB,yDAAH,sDAiBjByB,EAAc,mCAAG,WAAM/B,GAAN,gGAECmB,IAAAA,IAAA,gBAAmBnB,EAAnB,oBAAsCkB,EAAtC,oBAFD,cAEhBG,EAFgB,yBAGfA,EAASC,MAHM,gCAKtBjB,QAAQC,IAAR,MALsB,yDAAH,sDASd0B,EAAc,mCAAG,WAAMhC,GAAN,gGAECmB,IAAAA,IAAA,gBAAmBnB,EAAnB,4BAA8CkB,EAA9C,oBAFD,cAEhBG,EAFgB,yBAGfA,EAASC,KAAKW,MAHC,gCAKtB5B,QAAQC,IAAR,MALsB,yDAAH,sDASdH,EAAiB,mCAAG,WAAMH,GAAN,gGAEFmB,IAAAA,IAAA,gBAAmBnB,EAAnB,4BAA8CkB,EAA9C,2BAFE,cAEnBG,EAFmB,yBAGlBA,EAASC,KAAKC,SAHI,gCAKzBlB,QAAQC,IAAR,MALyB,yDAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ReviewList = styled.ul`\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    gap: ${p => p.theme.space[4]}px;\n`;\n\nexport const ReviewItem = styled.li`\n    padding: ${p => p.theme.space[3]}px;\n    border-radius: ${p => p.theme.radii.normal};\n    border-color: transparent;\n    box-shadow: 0px 0px 7px 2px rgba(0,0,0,0.7) \n`;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/api';\nimport { Box } from 'components/Box';\nimport { ReviewList, ReviewItem } from './Reviews.styled';\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        (async function getReviews() {\n            try {\n                const reviewsInfo = await fetchMovieReviews(movieId);\n                setReviews(reviewsInfo);\n            } catch (error) {\n                console.log(error);\n            }\n        })();\n    }, [movieId]);\n\n    return (\n        <Box>\n            <ReviewList>\n                {reviews.length > 0 ? (\n                    reviews.map(({ id, author, author_details: { rating }, content, created_at }) => {\n                        return (<ReviewItem key={id}>\n                            <p><b>Author:</b> {author}</p>\n                            <p><b>Rating:</b> {rating ? rating : 'No rating'}</p>\n                            <p><b>Content:</b> {content}</p>\n                            <p><b>Created at:</b> {new Date(created_at).toLocaleDateString('en-US')}</p>\n                        </ReviewItem>\n                        );\n                    })) : (<b>There are no reviews at this movie</b>)}\n            </ReviewList>\n        </Box>\n    );\n};\n\nexport default Reviews;","import axios from \"axios\";\n\nconst API_KEY = '08f616fe2f268b4dbcc5ac680fac4838';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n    try {\n        const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n        return response.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchSearchMovies = async query => {\n    try {\n        const response = await axios.get('search/movie', {\n            params: {\n                api_key: API_KEY,\n                query: query,\n                language: 'en - US',\n                page: 1,\n                include_adult: false,\n            },\n        });\n        return response.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchMovieById = async movieId => {\n    try {\n        const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n        return response.data;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchMovieCast = async movieId => {\n    try {\n        const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n        return response.data.cast;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchMovieReviews = async movieId => {\n    try {\n        const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n        return response.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\n"],"names":["ReviewList","styled","p","theme","space","ReviewItem","radii","normal","useState","reviews","setReviews","movieId","useParams","useEffect","fetchMovieReviews","reviewsInfo","console","log","Box","length","map","id","author","rating","author_details","content","created_at","Date","toLocaleDateString","API_KEY","axios","fetchTrendingMovies","response","data","results","fetchSearchMovies","query","params","api_key","language","page","include_adult","fetchMovieById","fetchMovieCast","cast"],"sourceRoot":""}